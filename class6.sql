/* STORED PROCEDURES */

/* TO CHANGE DEFAULT DELIMITER*/
DELIMITER $

/* EXEMPLES */
CREATE PROCEDURE NAME()
BEGIN
    ANYTHING

END$

CALL NAME()

DROP PROCEDURE NOME;


/* TO PRACTISE */


DELIMITER $


CREATE PROCEDURE CALC(NUMBER1 INT, NUMBER2 INT)
BEGIN
    SELECT NUMBER1 + NUMBER2 AS RESULT;

END$

DELIMITER ;

CALL CALC(10, 20);

/* AGREGADORES  */

CREATE TABLE VENDENDORES(
    IDVENDEDOR INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30),
    SEXO CHAR(1),
    JANEIRO FLOAT(10,2),
    FEVEREIRO FLOAT(10,2),
    MARCO FLOAT(10,2)
);

INSERT INTO VENDENDORES VALUES( NULL, 'GREG', 'M', 1010101.10, 2020202.20, 30303030.30);
INSERT INTO VENDENDORES VALUES( NULL, 'TONIA S.', 'F', 1212121.10, 1020202.20, 8903030.30);
INSERT INTO VENDENDORES VALUES( NULL, 'CARUSO S.', 'M', 1111111.10, 2222222.20, 950965.30);
INSERT INTO VENDENDORES VALUES( NULL, 'MORELO S.', 'F', 1010101.10, 212121.20, 2989303.30);
INSERT INTO VENDENDORES VALUES( NULL, 'JULLIUS', 'M', 1010101.10, 2.20, 30303030.30);
INSERT INTO VENDENDORES VALUES( NULL, 'ROCHELLE S.', 'F', 8989701.10, 65200202.20, 90909897.30);
INSERT INTO VENDENDORES VALUES( NULL, 'CHRIS', 'M', 89898.10, 76768.20, 30.30);
INSERT INTO VENDENDORES VALUES( NULL, 'TASHA', 'F', 32323501.10, 276762.20, 56565.30);
INSERT INTO VENDENDORES VALUES( NULL, 'OMAR', 'M', 18878768.10, 3131231.20, 3323232.30);

select * FROM VENDENDORES;


/* MAX -  TRAZ O VALOR MAXIMO DE UMA COLUNA */

SELECT MAX(FEVEREIRO) AS MAX_FEVEREIRO FROM VENDENDORES;

/* MIN -  TRAZ O VALOR MENOR DE UMA COLUNA */
SELECT MIN(FEVEREIRO) AS MIN_FEVEREIRO FROM VENDENDORES;

/* AVG -  TRAZ A MEDIA DE VALOR, DE UMA COLUNA */
SELECT AVG(FEVEREIRO) AS MEDIA_FEVEREIRO FROM VENDENDORES;

/* TRUNCATE - ARRENDONDA EM QUANTAS CASAS DECIMAIS FOR PRECISO... POR EXEMPLO: 2 NO CASO ABAIXO. */
SELECT TRUNCATE(AVG(FEVEREIRO), 2)  AS MAX_FEVEREIRO FROM VENDENDORES;

/* MISTURANDO VARIAS FUNCOES */
SELECT MIN(FEVEREIRO) AS MIN_FEVEREIRO,
       MAX(FEVEREIRO)  AS MAX_FEVEREIRO,
       TRUNCATE(AVG(FEVEREIRO), 2) AS MEDIA_FEVEREIRO
       FROM VENDENDORES;


/* SUM */

SELECT SUM(FEVEREIRO) AS TOTAL_DE_VENDAS_DE_FEVEREIRO FROM VENDENDORES;

SELECT SUM(JANEIRO) AS TOTAL_DE_VENDAS_DE_JANEIRO,
       SUM(FEVEREIRO) AS TOTAL_DE_VENDAS_DE_FEVEREIRO,
       SUM(MARCO) AS TOTAL_DE_VENDAS_DE_MARCO
       FROM VENDENDORES;

SELECT SEXO,  SUM(JANEIRO) AS TOTAL_DE_VENDAS_DE_JANEIRO,
       SUM(FEVEREIRO) AS TOTAL_DE_VENDAS_DE_FEVEREIRO,
       SUM(MARCO) AS TOTAL_DE_VENDAS_DE_MARCO
       FROM VENDENDORES
GROUP BY SEXO;

/* SUBQUERY */
/* MELHOR VENDEDOR */
SELECT NOME, MARCO FROM VENDENDORES WHERE MARCO = (SELECT MAX(MARCO) FROM VENDENDORES);
/* MENOS VENDA DE MARCO */
SELECT NOME, MARCO FROM VENDENDORES WHERE MARCO = (SELECT MIN(MARCO) FROM VENDENDORES);


/* EXEMPLO PROFISSIONAL DE CRIAR RELACIONAMENTOS, POIS ISSO FACILITA NO DICIONARIO DO BANCO */
CREATE TABLE CLIENTE(
    IDCLIENTE INT,
    NOME VARCHAR(30) NOT NULL
);

CREATE TABLE TELEFONE(
    IDTELEFONE INT,
    TIPO CHAR(3) NOT NULL,
    NUMERO VARCHAR(10) NOT NULL,
    ID_CLIENTE INT
);


ALTER TABLE CLIENTE ADD CONSTRAINT PK_CLIENTE PRIMARY KEY AUTO_INCREMENT (IDCLIENTE)

ALTER TABLE TELEFONE ADD CONSTRAINT FK_CLIENTE_TELEFONE FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(IDCLIENTE)

ALTER TABLE TELEFONE ADD CONSTRAINT PK_TELEFONE PRIMARY KEY AUTO_INCREMENT (IDTELEFONE)


/* TRIGGERS */

CREATE TRIGGER NOME_TRIGGER
BEFORE/AFTER INSERT/DELETE/UPDATE ON NOME_DA_TABELA
FOR EACH ROW 
BEGIN -> 
    QUALQUER COMANDO....
END ->


CREATE DATEBASE AULATRIGGER;

USE AULATRIGGER;


CREATE TABLE USUARIO(
    IDUSUARIO INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30),
    LOGIN VARCHAR(30),
    SENHA VARCHAR(30)

);

CREATE TABLE BKP_USUARIO(
    IDBACKUP INT PRIMARY KEY AUTO_INCREMENT,
    IDUSUARIO INT, 
    NOME VARCHAR(30),
    LOGIN VARCHAR(30)
);

DELIMITER #

CREATE TRIGGER BACKUP_USUARIO
BEFORE DELETE ON USUARIO
FOR EACH ROW
BEGIN
    INSERT INTO BKP_USUARIO VALUES  (NULL, OLD.IDUSUARIO, OLD.NOME, OLD.LOGIN);
END
#

DELIMITER ;


INSERT INTO USUARIO VALUES  (NULL, 'CRHIS', 'HATECRHIS', '212121');
INSERT INTO USUARIO VALUES  (NULL, 'ROCHELLE', 'ROCHELLE123', '212121');
INSERT INTO USUARIO VALUES  (NULL, 'JULLIUS', 'JULLIUS123', '212121');
INSERT INTO USUARIO VALUES  (NULL, 'SROMAR', 'SROMAR123', '212121');
INSERT INTO USUARIO VALUES  (NULL, 'TONIA', 'TONIA123', '212121');
INSERT INTO USUARIO VALUES  (NULL, 'PERIGO', 'PERIGO123', '212121');
INSERT INTO USUARIO VALUES  (NULL, 'CARUSO', 'CARUSO123', '212121');

DELETE FROM USUARIO WHERE NOME = 'CARUSO';

/* TRABALHONDO COM DICIONARIO DE BANCO */
USE INFORMATION_SCHEMA


CREATE DATEBASE AUTORELACIONAMENTO

CREATE TABLE CURSO(
    ID_CURSO INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30),
    HORAS INT,
    VALOR FLOAT(10,2),
    ID_CURSO_PREREQ INT
)

INSERT INTO CURSO VALUES(1, 'SEM PREREQ', 0, 0.0, NULL);

ALTER TABLE CURSO ADD CONSTRAINT FK_PREREQ FOREIGN KEY (ID_CURSO_PREREQ) REFERENCES (ID_CURSO);





CREATE DATABASE AUTORELACIONAMENTO;

CREATE TABLE CURSO(
    ID_CURSO INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30),
    HORAS INT,
    VALOR FLOAT(10,2),
    ID_CURSO_PREREQ INT
)

USE AUTORELACIONAMENTO

ALTER TABLE CURSO ADD CONSTRAINT FK_PREREQ FOREIGN KEY (ID_CURSO_PREREQ) REFERENCES CURSO(ID_CURSO);

INSERT INTO CURSO VALUES(NULL, 'LOGICA DE PROGRAMACAO', 100, 150.0, NULL);
INSERT INTO CURSO VALUES(NULL, 'JAVA', 200, 400.0, 2);
INSERT INTO CURSO VALUES(NULL, 'SPRING', 500, 650.0, 3);
INSERT INTO CURSO VALUES(NULL, 'JAVASCRIPT', 200, 450.0, 2);
INSERT INTO CURSO VALUES(NULL, 'REACT', 100, 650.0, 4);
INSERT INTO CURSO VALUES(NULL, 'MOBILE', 100, 750.0, 2);


SELECT C.NOME, C.HORAS, C.VALOR, IFNULL(P.NOME, 'CURSO SEM PREREQUISITO') AS PREREQUISITO
FROM CURSO AS C LEFT JOIN CURSO AS P ON P.ID_CURSO = C.ID_CURSO_PREREQ;
